
1. WITH activity_stat_by_user AS(
   SELECT
    *,
    DENSE_RANK() OVER(PARTITION BY username ORDER BY start_date) AS activity_serial,
    COUNT(*) OVER(PARTITION BY username) AS total_activity_count_by_user
   FROM
    user_activity
   )
   SELECT
   username,
   activity,
   start_date,
   end_date
   FROM
   activity_stat_by_user
   WHERE
   CASE
    WHEN total_activity_count_by_user = 1
      THEN 1
    WHEN activity_serial = 2
      THEN 1
   END = 1
   ;
   
2. WITH activity_stat_by_user AS(
   SELECT
    *,
    DENSE_RANK() OVER(PARTITION BY username ORDER BY start_date) AS activity_serial,
    COUNT(*) OVER(PARTITION BY username) AS total_activity_count_by_user
   FROM
    user_activity
   )
   SELECT
   username,
   activity,
   start_date,
   end_date
   FROM
   activity_stat_by_user
   WHERE
   CASE
    WHEN total_activity_count_by_user = 1
      THEN 1
    WHEN activity_serial = 2
      THEN 1
   END = 1
   ;
   
3. SELECT name
   FROM students
   WHERE marks > 75
   ORDER BY RIGHT(name, 3),id;
   
4. SELECT name
   FROM employee
   WHERE salary > 2000 AND months < 10
   ORDER BY employee_id;
   
5.  SELECT a,b,c,
    CASE
    WHEN a + b <= c OR b + c <= a OR c + a <= b
      THEN 'Not A Triangle'
    WHEN a = b AND b = c
      THEN 'Equilateral'
    WHEN a = b AND b=c or b = c AND a = b
      THEN 'Isosceles'
    ELSE
      'Scalene'
     END AS triangle_type
    FROM triangles;  

